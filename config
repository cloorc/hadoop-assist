#!/bin/bash

info() {
  echo -e "\e[32m$*\e[0m"
}

warning () {
  echo -e "\e[31m$*\e[0m";
}

fatal() {
  warning $*;
  exit -1;
}

debug () {
  [ -n "$enabledebug" ] && echo -e "\e[33m$*\e[0m"
}

usage () {
  warning "usage:";
  info " $0 hdfs <prop> <value>";
}

doit () {
  site=$1 && shift
  debug "$LINENO: $*"
  for a in $* ;do
    case $a in
    --delete) mode=delete ;;
    *) 
      if [ -z "$prop" ] ;then
        prop=$a
      else
        vnew=$a
      fi
      ;;
    esac
  done

  [ $# -eq 0 ] && {
    while read ln ;do
      [ -z "$prop" ] && prop=$(echo $ln|grep name|awk -F\> '{print $2}'|awk -F\< '{print $1}')
      [ -z "$vold" ] && {
        vold=$(echo $ln|grep value|awk -F\> '{print $2}'|awk -F\< '{print $1}')
        [ -n "$prop" -a -n "$vold" ] && {
          info "$prop = $vold"
          prop=
          vold=
        }
      }
    done<$site
    return
  }

  debug "$LINENO: $prop"
  debug "$LINENO: $vnew"
  k=$(grep -n "<name>$prop</name>" $site)
  debug "$LINENO: $k"
  if [ -n "$k" ] ;then
    kv=$(grep -o -z "<name>$prop</name>\s*<value>[^<>]*</value>" $site)
    v=$(echo $kv|grep value|awk -F\> '{print $4}'|awk -F\< '{print $1}')
    debug "$LINENO: $kv"
    debug "$LINENO: length of '$v' = $(expr length "$v")"
    if [ -n "$vnew" ] ;then
      debug "$LINENO: [mod] $vnew"
      sed -i -z "s/\(<name>$prop<\/name>\s*<value>\)[^<>]*\(<\/value>\)/\1${vnew//\//\\\/}\2/g" $site
      [ $? -eq 0 ] && info "[mod] $prop = $v -> $vnew"
    elif [ "$mode" = "delete" ] ;then
      debug "$LINENO: [del]"
      sed -i -z "s/\s*<property>\s*<name>$prop<\/name>\s*<value>[^<>\s]*<\/value>\s*<\/property>[^\n]*/  /g" $site
      info "[del] $prop = "
    else
      debug "$LINENO: [get]"
      info "$prop : $v"
    fi
  else
    if [ -n "$prop" -a -n "$vnew" ] ;then
      debug "$LINENO: [add]"
      sed -i "/<configuration>/a\ \ <property>\n    <name>$prop<\/name>\n    <value>$vnew<\/value>\n  <\/property>" $site
      [ $? -eq 0 ] && info "[add] $prop = $vnew"
    else
      warning "property $prop not found."
    fi
  fi
}

hdfs () {
  site=$HADOOP_CONF_DIR/hdfs-site.xml
  [ -z "$HADOOP_CONF_DIR" ] && {
    site=$HADOOP_HOME/hdfs-site.xml
  } && [ -z "$HADOOP_HOME" ] && {
    fatal "HADOOP_CONF_DIR or HADOOP_HOME not defined.";
  }
  doit $site $*
}

core () {
  site=$HADOOP_CONF_DIR/core-site.xml
  [ -z "$HADOOP_CONF_DIR" ] && {
    site=$HADOOP_HOME/core-site.xml
  } && [ -z "$HADOOP_HOME" ] && {
    fatal "HADOOP_CONF_DIR or HADOOP_HOME not defined.";
  }
  doit $site $*
}

for c in $* ;do
  case $c in
    -d)
      enabledebug=true;;
    *)
      if [ -z "$cmd" ] ;then
        cmd=$c
      else
        arg+=" $c"
      fi
      ;;
  esac
done
arg=${arg## }
arg=${arg%% }

debug "$LINENO: $cmd $arg"
case $cmd in
  hdfs) hdfs ${arg};;
  core) core ${arg};;
  *) usage;;
esac
